@model AdminRole.Models.SpremenljivkeView

@using System.Activities.Expressions
@using System.Data
@using System.Data.Common.CommandTrees.ExpressionBuilder
@using System.Security.AccessControl
@using System.Threading
@using System.Web.Razor.Parser.SyntaxTree
@using System.Web.Services.Discovery
@using System.Web.UI.WebControls
@using Microsoft.Ajax.Utilities
@using AdminRole.Models
@using AdminRole.Helpers
@using System.Security.Policy
@using System.Web.Mvc.Html

@{
    ViewBag.Title = "Message Viewer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{

    <script type="text/javascript">

        $(function () {
            $('.datepicker').datetimepicker({
                showAnim: 'slideDown',
                dateFormat: 'yy-mm-dd'
            });
        });

    </script>
    
    <script type="text/javascript">

        $(function () {
            $(document).on('click', '.message-data', function (e) {
                e.preventDefault();
                jQuery.modal($(this).next().html());
            });
        });

    </script>
    
    <script type="text/javascript">
        function ValidateNumber(e) {
            var evt = (e) ? e : window.event;
            var charCode = (evt.keyCode) ? evt.keyCode : evt.which;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        };
    </script>
 
    string userName = System.Web.HttpContext.Current.User.Identity.Name;
    using (var dbUs = new userDbEntities())
    {
        var currentUser = dbUs.UsersTables.FirstOrDefault(u => u.username == userName);
        if (currentUser != null)
        {

            if (currentUser.VlogaUporabnika.Id_Vloga == VlogaEnum.Spediter)
            {
                using (Html.BeginForm("Index", "LoginUser", FormMethod.Get))
                {
                <div class="center-table">
                    <div class="center-vrstice">

                        <div class="vrstica">
                            <label>Customer:</label>
                            <div class="editor-field">
                                @Html.DropDownList("destination", ((SelectList)ViewBag.DropList).Select(t => new SelectListItem() { Text = t.Text, Value = t.Text, Selected = (t.Text == ViewBag.Destination) }), "-- Select All --", Model.Search.Destination)
                            </div>
                        </div>

                        <div class="vrstica">
                            <label>Order:</label>
                            <div class="editor-field">
                                @Html.TextBox("order", Model.Search.Order, new { onkeydown = "return ValidateNumber(event);" })
                            </div>
                        </div>

                        <div class="vrstica">
                            <label>Internal:</label>
                            <div class="editor-field">
                                @Html.TextBox("internal", Model.Search.Internal, new { maxlength = 6, onkeydown = "return ValidateNumber(event);" })
                            </div>
                        </div>

                        <div class="vrstica">
                            <label>Date From:</label>
                            <div class="editor-field">
                                @Html.TextBox("exchangetimestamp", Model.Search.Exchangetimestamp, new { @class = "datepicker" })
                            </div>
                        </div>

                        <div class="vrstica">
                            <label>Date To:</label>
                            <div class="editor-field">
                                @Html.TextBox("exchangetimestamp2", Model.Search.Exchangetimestamp2, new { @class = "datepicker" })
                            </div>
                        </div>
                        
                        <div class="vrstica">
                            <input class="first-search_btn" type="submit" value="Search" />
                        </div>

                    </div>

                    <div class="crta1">
                        <hr />
                    </div>

                    @* Tabela *@

                    <div class="tabelaSolr">
                        <table class="dani-tabela2">
                            <tr class="naslovi">
                                <th>Internal No.</th>
                                <th>Message Type</th>
                                <th>Sender</th>
                                <th>Destination</th>
                                <th>Order</th>
                                <th>Exchange Time Stamp</th>
                                <th>Details</th>
                            </tr>

                            @foreach (var row in Model.Spremenljivke)
                            {
                                <tr align="center">
                                    <td>@row.Internal.First()</td>
                                    <td>
                                        <div class="status lnk1">@String.Join("", new userDbEntities().KraticeTables.Where(rt => rt.Kratica == row.MsgT.FirstOrDefault()).Select(r => r.OpisAng).FirstOrDefault() ?? row.MsgT.FirstOrDefault())</div>
                                        <div class="status lnk2">@String.Join("", new userDbEntities().KraticeTables.Where(rt => rt.Kratica == row.MsgT.FirstOrDefault()).Select(r => r.OpisSlo).FirstOrDefault() ?? row.MsgT.FirstOrDefault())</div>
                                    </td>
                                    <td>@row.Sender.First()</td>
                                    <td>@row.Destination.First()</td>
                                    <td>@row.Order.First()</td>
                                    <td>@row.Exchangetimestamp.Add(Model.TimeZone.BaseUtcOffset)</td>
                                    <td>
                                        <a href class="message-data">View</a>
                                        <div style="display: none">
                                            <div style="display: block">
                                                <h3>Detail View of Data</h3>

                                                <p class="pscript">
                                                    Internal: <b>@Html.Raw(row.Internal.First())</b>
                                                </p>

                                                <p class="pscript">
                                                    Sequential Id: <b>@Html.Raw(row.Sequ)</b>, Mesage Type: <b>@Html.Raw(row.MsgT.First())</b>
                                                </p>

                                                <p class="pscript">
                                                    Sender: <b>@Html.Raw(row.Sender.First())</b> Destination: <b>@Html.Raw(row.Destination.First())</b> with Order: <b>@Html.Raw(row.Order.First())</b>
                                                </p>

                                                <p class="pscript">
                                                    Date: <b>@Html.Raw(row.Exchangetimestamp.Add(Model.TimeZone.BaseUtcOffset))</b>
                                                </p>

                                                <p class="pscript">
                                                    Status: <b>@Html.Raw(row.MsgS)</b>
                                                </p>

                                                <p class="pscript">
                                                    Data information of message.
                                                </p>
                                                <div>
                                                    <code>
                                                        <pre>@Html.Raw(Html.Encode(row.Data))</pre>
                                                    </code>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
                }
            }
            else if (currentUser.VlogaUporabnika.Id_Vloga == VlogaEnum.SpediterOsnovni)
            {

                using (Html.BeginForm("Index", "LoginSimpleUser", FormMethod.Get))
                {
                                       
                <div class="center-table">
                    <div class="center-vrstice">
                        <div class="vrstica">
                            <label>
                                <div class="status lnk1">Stranka:</div>
                                <div class="status lnk2">Customer:</div>
                            </label>
                            <div class="editor-field">
                                @Html.DropDownList("destination", ((SelectList)ViewBag.DropList).Select(t => new SelectListItem() { Text = t.Text, Value = t.Text, Selected = (t.Text == ViewBag.Destination) }), (SelectList)ViewBag.DropList)
                            </div>
                        </div>
                        <div class="vrstica">
                            <label>
                                <div class="status lnk1">Interna številka:</div>
                                <div class="status lnk2">Internal Number:</div>
                            </label>
                            <div class="editor-field">
                                @Html.TextBox("internal", Model.Search.Internal, new { maxlength = 6, onkeydown = "return ValidateNumber(event);" })
                            </div>
                        </div>
                        <div class="vrstica">
                            <input class="first-search_btn" type="submit" value="Search" />
                        </div>

                    </div>

                    <div class="crta1">
                        <hr />
                    </div>

                    <div class="tabelaSolr">
                        <table class="dani-tabela3" cellspacing="0px">
                            <tr class="naslovi">
                                <th>
                                    <div class="status lnk1">Dogodek</div>
                                    <div class="status lnk2">Event</div>
                                </th>
                                <th>
                                    <div class="status lnk1">Interna številka</div>
                                    <div class="status lnk2">Internal Number</div>
                                </th>
                                <th>
                                    <div class="status lnk1">Poslana dispozicija</div>
                                    <div class="status lnk2">Sended disposition</div>
                                </th>
                                <th>
                                    <div class="status lnk1">Luška številka</div>
                                    <div class="status lnk2">Order Number</div>
                                </th>
                                <th>
                                    <div class="status lnk1">Stanje dispozicije</div>
                                    <div class="status lnk2">Disposition state</div>
                                </th>
                                <th>
                                    <div class="status lnk1">Datum obravnave</div>
                                    <div class="status lnk2">Proceeding date</div>
                                </th>
                            </tr>
                            @if (Model.Spremenljivke != null)
                            {
                                int dogodek = 1;
                                foreach (var row in Model.Spremenljivke)
                                {
                                <tr align="center">
                                    <td><strong>[@(dogodek++)]</strong></td>
                                    <td>@row.Internal.FirstOrDefault()</td>
                                    <td>@row.Exchangetimestamp.Add(Model.TimeZone.BaseUtcOffset)</td>
                                    <td>@row.Order.FirstOrDefault()</td>
                                    <td>
                                        <div class="status lnk1">@String.Join(",", new userDbEntities().KraticeTables.Where(rt => rt.Kratica == row.MsgT.FirstOrDefault()).Select(r => r.OpisSlo).FirstOrDefault() ?? row.MsgT.FirstOrDefault())</div>
                                        <div class="status lnk2">@String.Join(",", new userDbEntities().KraticeTables.Where(rt => rt.Kratica == row.MsgT.FirstOrDefault()).Select(r => r.OpisAng).FirstOrDefault() ?? row.MsgT.FirstOrDefault())</div>
                                    </td>
                                    <td>@row.Exchangetimestamp2.Add(Model.TimeZone.BaseUtcOffset)</td>
                                </tr>
                                }
                            }
                        </table>
                    </div>

                    <script type="text/javascript">
                            
                    </script>

                </div>
                }
            }
        }
        
        <div class="center-table">
            <div class="resultPosition">
                @{ Html.RenderPartial("Pagination", new PaginationInfo
                        {
                            PageUrl = Url.SetParameter("page", "!0"),
                            CurrentPage = Model.Search.PageIndex,
                            PageSize = Model.Search.PageSize,
                            TotalItemCount = Model.TotalCount,
                        }); }
            </div>

            <div class="pagesize">
                <table>
                    <td>
                        @{
                        int allItems = Model.TotalCount;
                        }

                        @{
                            <table>
                                <tr>
                                    <td>
                                        <div class="status lnk1">Zadetkov na stran: </div>
                                        <div class="status lnk2">Items per page: </div>
                                    </td>
                                    <td>
                                        @{
                                        var arr1 = new[] { 20, 30, 40, @allItems + 40 };
                                        for (var i = 0; i < arr1.Length; i++)
                                        {
                                            if (arr1[i] == Model.Search.PageSize)
                                            {
                                                                <span>@arr1[i]</span>
                                            }
                                            else
                                            {
                                                string a = "Prikaži vse";
                                                var linkText = (i < arr1.Length - 1) ? arr1[i].ToString() : @a;
                                                                <a href="@Url.SetParameters(new { pagesize = arr1[i], page = 1 })">@linkText</a>
                                            }
                                            @Html.Raw((i == (arr1.Length - 1) ? "" : "|"))
                                        }    
                                        }
                                    </td>
                                </tr>
                            </table>
                        }
                    </td>
                </table>
            </div>
        </div>    
    }
}