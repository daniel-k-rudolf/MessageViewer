@model PagedList.IPagedList<AdminRole.Models.KraticeTable>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>
@{
    ViewBag.Title = "Message Viewer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="center-table">
    @using (Html.BeginForm("KraticeView", "LoginUser", FormMethod.Get))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="search_field">
            Find message type:
            <br/>
            @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new {@style = "width: 200px;"})
            <input class="gumbSearch" type="submit" value="Search"/>
            
            <input class="gumb_back_to-view" type="button" value="Back to Veiw" onclick="RedirectToView()"/> 
            <script type="text/javascript">
                function RedirectToView() {
                var url = "@Url.Action("Index")";
                location.href = url;
                }
            </script>
        </div>
    }
    
    <div class="tabelaSolr">
        <table class="dani-tabela">
            <thead>
                <tr>
                    <th>
                        Id
                    </th>
                    <th>
                        @Html.ActionLink("Message Types", "KraticeView", new {sortOrder = ViewBag.KratView, currentFilter = ViewBag.CurrentFilter})
                    </th>
                    <th>
                        Slo. description
                    </th>
                    <th>
                        Eng. description
                    </th>
                </tr>
            </thead>
            @foreach (var use in Model)
            {
                <tbody>
                    <tr>
                        <td>@Html.DisplayFor(modelItem => use.Id_K)</td>
                        <td>@Html.DisplayFor(modelItem => use.Kratica)</td>
                        <td>@Html.DisplayFor(modelItem => use.OpisSlo)</td>
                        <td>@Html.DisplayFor(modelItem => use.OpisAng)</td>
                    </tr>
                </tbody>
            }
        </table>
    </div>
    <br/>
    <div class="pagerPosition">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, pageKrat => Url.Action("KraticeView", new { pageKrat, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))
    </div>

</div>
