@using AdminRole.Models
@model AdminRole.Models.UserModel 

@{
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("CreateNew", "LoginAdmin", FormMethod.Post, new {id = "user-form"}))
    {
        @Html.AntiForgeryToken()
        <div class="container top">

		<div class="row">
			<div class="col-md-8 col-md-offset-2">
				<div class="page-header"><h2>Ustvari uporabnika</h2></div>
				
			    <div role="form" class="delete-users">
			        <div class="form-group">
			            @Html.HiddenFor(o => o.User.userID)
			            <label for="us">Uporabniško ime</label>
			            @Html.TextBoxFor(u => u.User.username, new{@class="form-control", id="us", placeholder=""})
			            @Html.ValidationMessageFor(u => u.User.username, null, new {@class="help-block pull-right"}) 
			        </div>
			        <div class="form-group">
			            <label>Geslo</label>
			            @Html.PasswordFor(u => u.User.password, new{@class="form-control", id="us", placeholder=""})
			            @Html.ValidationMessageFor(u => u.User.password, null, new {@class="help-block pull-right"}) 
			        </div>
			        <div class="form-group">
			            <label>Časovna zona</label>
			            @Html.DropDownListFor(o => o.User.TimeZoneId, TimeZoneInfo.GetSystemTimeZones().Select(o => new SelectListItem{Text = o.DisplayName, Value = o.Id}), new{@class="form-control", id="us", placeholder=""})
			            @Html.ValidationMessageFor(u => u.User.TimeZoneId)
			        </div>
			        <div class="form-group">
			            <label>Vloga uporanbnika</label>
			            @Html.DropDownList("VlogaNaziv", ((SelectList) ViewBag.DropListVloge).Select(t => new SelectListItem(){Text = t.Text, Value = t.Text, Selected = (t.Text == ViewBag.SelectedVloga)}), new{@class="form-control", id="us"})
			        </div>

			        <div class="row customers">
			            <label class="col-sm-2">Stranka</label>
			            <div class="col-sm-8">
			                @for (var i = 0; i < Model.User.CustomerTables.Count; i++)
			                {                    
			                    <div class="ud">
                                    <select name="@Html.Raw("User.CustomerTables["+i+"].CustomType.Id_NewCustomerType")" class="form-control pull-left">
                                        <option value="">Select</option>
                                        @foreach (var opt in Model.CustomTypes)
                                        {
                                            <option value="@opt.Id_NewCustomerType" @Html.Raw(opt.Id_NewCustomerType == Model.User.CustomerTables[i].CustomType.Id_NewCustomerType ? "selected" : "")>@opt.CustomerType</option>
                                        }

                                    </select>
                                    <input type="hidden" value="@Html.Raw(Model.User.CustomerTables[i].CustomerID)" name="@Html.Raw("User.CustomerTables["+i+"].CustomerID")"/>
                                    <input type="hidden" value="@Html.Raw(Model.User.CustomerTables[i].UserId)" name="@Html.Raw("User.CustomerTables["+i+"].UserId")"/>
                                    <input type="hidden" value="@Html.Raw(Model.User.CustomerTables[i].Customer)" name="@Html.Raw("User.CustomerTables["+i+"].Customer")"/>
                                    <button type="button" class="btn btn-danger pull-left delete-custom" data-id="@i">X</button>
			                    </div>					
			                }
			            </div>  
                        				        
			        </div>
			        <div class="clearfix"></div>
			        <div class="form-group">
			            <label>Stranka</label>
			            <button type="button" class="add-custom btn btn-success">Dodaj stranko</button>
			        </div>
			        <div class="clearfix"></div><br />
			        <button type="submit" class="btn btn-default pull-left btn-primary" name="action">Shrani</button>
			        <button type="submit" class="btn btn-default pull-right btn-primary" onclick="RedirectToEdit()">Nazaj</button>
			        <script type="text/javascript">
        			    function RedirectToEdit() {
        			        var url = "@Url.Action("Registracija")";
        			        location.href = url;
        			    }
        			</script>
			    </div>
				<span>@Html.ValidationSummary(false, null, new{@class="alert alert-danger alert-dismissible", role="alert"})</span>
			</div>
		</div>
		
		<div class="row">
		
			<div class="col-md-12">
				<hr />
				&copy; Actual I.T., d.d. 
			</div>
			
		</div>
		
    </div><!-- /.container -->
    }

<script type="text/javascript">
    $(function () {

        $('.add-custom').on('click', function (e) {
            e.preventDefault();
            var form = $('#user-form').serialize();
            form += "&act=addcustom";

            $.post('/LoginAdmin/CreateNew', form, function (data) {
                $('#user-form').replaceWith(data);
            });
        });

        $('.delete-custom').on('click', function (e) {
            e.preventDefault();
            var form = $('#user-form').serialize();
            form += "&act=deletecustom&idx=" + $(this).data('id');

            $.post('/LoginAdmin/CreateNew', form, function (data) {
                $('#user-form').replaceWith(data);
            });
        });

        $("#user-form").submit(function (e) {
            e.preventDefault();
            var form = $('#user-form').serialize();
            form += "&act=save";
            $.post('/LoginAdmin/CreateNew', form, function (data) {
                if (data == "success")
                    Redirect();
                else
                    $('#user-form').replaceWith(data);
            });
        });
    });

    function Redirect() {
        var url = "@Url.Action("Registracija")";
        location.href = url;
    }

</script>



